1 / Inf
vector()
vector(numeric,3)
help(vector)
vector(mode="logical", length=0)
vector(0)
vector()
0/0
Nan
NaN
attributes()
attributes(1)
attributes(vector())
x<-1
print(x)
msg <- hello
msg <- "hello"
print(msg)
msg
x <- #incomplete
c
;
x <- 1..20
x <- 1:20
x
x <- (1+0*i, 3+4*c)
x <- (1+0*i; 3+4*c)
x <- c(1+0*i, 3+4*i)
x <- c(1+0i, 3+4i)
x
x <- c("a", "b", "c")
x
x <-c(T,F)
x
x<-vector("numeric", length=10)
x
y<-c(1.6,"a")
y
y<-c(T,"a")
y
y<-c(T,2)
y
x<-0:6
class(x)
as.numeric(x)
as.logica(x)
as.logical(x)
as.integer(x)
as.character(x)
as.complex(x)
x<-vector("a","b")
m<-matrix(2,3)
m
m<-matrix(nrow=2,ncol=3)
m
dim(m)
attributes(m)
m<-matrix(1:6, nrow=2, ncol=3)
m
m<-matrix(1:6, nrow=2, ncol=4)
m<-matrix(as.character(1:6), nrow=2, ncol=4)
m<-matrix(as.character(1:6), nrow=2, ncol=3)
m
x<-1:10
x
dim(x) <- c(2,5)
x
x<-1:3
y<-10:12
x
y
cbind(x,y)
dim(cbind(x,y))
rbind(x,y)
m<-rbind(x,y)
m
attributes(m)
x<-list(1,"a", T,3L)
x
attributes(x)
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "no"))
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "nop"))
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "no"))
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", 3))
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "3"))
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "no"))
x
attributes(x)
class(x)
table(x)
x
table(x)
attributes(table(x))
x
unclass(x)
x
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "no"), levels=c("yes",no))
x<-factor(c("yes", "no", "no", "yes", "yes", "yes", "no"), levels=c("yes","no"))
x
table(x)
levels(x)
dimnames(x)
attributes(x)
table(x)
dimnames(table(x))
x<-c(1,2,NA,3)
x
is.na(x)
is.nan(x)
x<-c(1,2,NaN,3)
is.nan(x)
is.na(x)
x<-c(1,2,NaN,3,NA)
is.na(x)
is.nan(x)
x=data.frame(nomi=c("francesco", "tamara", "ilio", "gabriella"), ruolo=c("figlio", "figlia", "padre","madre"))
x
x.matrix()
attributes(x)
x<-list(a=1, b=2, c=3)
x
attributes(x)
names(x)
quit()
Inf
NA
Na
Nan
NaN
0/9
0/0
0/Inf
0/inf
x<-1
x
print x
print(x)
x<-1..20
x<-1:20
x
x<-c(1:20)
x
x<-c(1,20)
x
x<-c(T,F)
x
x<-c(TRUE,FALSE)
x
x<-c(1+0i,2+3i)
x
x<-0:6
as.numeric(x)
as.character(x)
as.logical(x)
as.integer(x)
as.complex(x)
m<-matrix(nrow=2,ncol=3)
m
help(matrix)
x<-matrix(1:6,nrow=2,ncol=6)
x
m=NA
attributes(x)
m<-1:10
dim(m)<-c(2,5)
m
dim(m)<-c(5,2)
m
dim(m)<-c(5,3)
dim(m)<-c(5,1)
dim(m)<-c(5,4)
m
x<-1:3
y<-2:5
z<-4:6
rbind(x,y,z)
y<-2:4
rbind(x,y,z)
cbind(x,y,z)
help(cbind)
x<-list(1,"a",T,1+3i)
z
x
x[[1]]
x[1]
class(x[1])
class(x[[1])
class(x[[1]])
x<-factor(c("yes","no","boh", "bah"))
x
table(yes)
table(x)
x<-factor(c("yes","no","boh", "bah", "boh", "yes", "yes"))
table(x)
x<-factor(c("yes","no","boh", "bah", "boh", "yes", "yes"), levels=c("yes","no"))
x
x<-factor(c("yes","no","boh", "bah", "boh", "yes", "yes"), levels=c("yes","no","bah","boh"))
x
x<-data.frame(foo=1:4, bar=c(T,T,F,F))
x
nrow(x)
ncol(x)
attributes(x)
class(x)
x$foo
x$bar
class(x$foo)
class(x$bar)
class(x$foo)
x$foo
x[[foo]]
x[["foo"]]
class(x[["foo"]]()
)
class(x[["foo"]])
x<-1:3
names(x)
names(x)<-c("a","b","c")
x
names(x)
x$a
x<-c("a","b","c","c","d","a")
x
x[1:4]
x[1]
x[2]
x[x>a]
x[x>"a"]
x[x>"c"]
u<-x>"a"
u
x[u]
m<-matrix(1:6,2,3)
m
dimnames(m) = c(nrow, ncol)
dimnames(m) = c("nrow", "ncol")
dimnames(m) = list("nrow", "ncol")
m
help(dimnames)
dimnames(m)
dimnames(m)<-c("row","col")
dimnames(m)<-list("row","col")
m
m[1,]
m[2,]
m[,1]
m[,2]
m[,3]
m[,4]
x<-list(a=list(10,12,14), b=c(3.14,2.81))
x
class(x)
names(x)
x$a
x$b
x
x[[c(1,3)]]
x[[c(2,1)]]
x[[c(2,2)]]
x<-c(1,2,NA,NA,3)
x
is.na(x)
bad<-is.na(x)
x[!bad]
x
y<-c("a",NA,NA,"d",2)
y
x
complete.cases(x,y)
x[good]
help(seq_along)
args(lm)
args/sum
args(sum)
f<-function(a,b){}
f<-function(a,b){
a^2
}
f(2)
f<-function(a,b){
print(a)
print(b)
f(54)
}
f<-function(a,b){
print(a)
print(b)
}
f(54)
search()
library(survival)
search()
f
environment(f)
parent.env(environment(f))
make.power<-function(n){
pow<-function(x){
x^n
}
pow
}
cube<-make.power(3)
square<-make.power(2)
cube(3)
square(3)
ls(environment("cube"))
ls(environment(cube))
get("n",environment(cuve))
get("n",environment(cube))
get("n",environment(square))
y<-10
f<-function(x){}
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){}
g<-function(x){
x * y
}
f(3)
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)){
params <- fixed
function(p){
params[!fixed] <- p
mu<-params[1]
sigma<-params[2]
a<- -0.5 * length(data) * log(2*pi*sigma^2)
b<- -0.5 * sum((data-mu)^2) / (sigma^2)
-(a+b)
}
}
set.seed(1)
normals=rnorm(100,1,1)
normals=rnorm(100,1,2)
nLL <- make.NegLogLik(normals)
nLL
ls(environment(nLL))
optim(c(mu=0, sigma=1), nLL)$par
x<-list(a=1:4, b=rnorm(10) c=rnorm(20,1), d=rnorm(100,5))
x<-list(a=1:4, b=rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
lapply(x,mean)
lapply(x,sum)
runif(100)
runif(100,max=100)
x<-list(rnorm(100), runif(100), rpois(100,1))
x
x[0]
x[1]
x[2]
x[3]
x[1]
length(x[1])
length(x[2])
length(x[3])
x[1]
str(x[1])
str(x[2])
str(x[3])
help(quantile)
setwd("~/Documents/dev/Coursera/R/week2")
ls()
ls
dir()
cd specdaa
cd specdata
cd "specdata"
read.csv("specdata/001.csv")
data1 <- read.csv("specdata/001.csv")
str(data\)
str(data1)
summary(data1)
sprintf("$03s","1")
sprintf("$03","1")
pad.string(1,3,"0")
sprintf("$05s","123")
sprintf("%05s","123")
sprintf("%03s","123")
sprintf("%03s",123)
sprintf("%03s",3)
"a"+b
"a"+"b"
help(cat)
cat("a","b")
cat("a","b",sep="")
my<-cat("a","b",sep="")
my
source(getMonitor.R)
source("getMonitor.R")
getmonitor
getmonitor()
getmonitor(3)
source("getMonitor.R")
getmonitor(3)
getmonitor(3,"mia")
source("getMonitor.R")
getmonitor(3,"mia")
cId
?paste
source("getMonitor.R")
getmonitor(3,"mia")
source("getMonitor.R")
getmonitor(3,"mia")
source("getMonitor.R")
getmonitor(3,"mia")
getmonitor(3,"mia")
source("getMonitor.R")
getmonitor(3,"mia")
getmonitor(3,"specdata")
source("getMonitor.R")
getmonitor(3,"specdata")
getmonitor(3,"specdata", T)
getmonitor(3,"specdata", summarize=TRUE)
?invisible
source("getMonitor.R")
getmonitor(3,"specdata", summarize=TRUE)
getmonitor(3,"specdata", summarize=FALSE)
getmonitor(3,"specdata", TRUE)
myData <- getmonitor(3,"specdata", TRUE)
myDSata
myData
summary(myData)
source("getMonitor.R")
myData <- getmonitor(3,"specdata", TRUE)
data <- getmonitor(1,"specdata")
head(data)
data <- getmonitor(101,"specdata",TRUE)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/getmonitor-test.R")
getmonitor.testscript()
data <- read.csv("specdata/001.csv")
complete.cases(data)
complete.cases(data, na.rm=TRUE
)
a<-complete.cases(data)
a[TRUE]
?complete(cases)
?complete.cases
a[T]
data[a]
str(data)
subset(data,a)
str(subset(data,a))
help(read.csv)
data[a]
str(data)
length(subset(data,a))
nobs(data)
data.nobs
names(data)
complete.cases(data)
sum(complete.cases(data))
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
complete("specdata")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
complete("specdata",1)
complete("specdata",c(2,4,8,10,12)
)
complete("specdata",30:25
)
complete("specdata",2)
complete("specdata",3)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/complete-test.R")
complete.testscript()
help(dir)
dir("specdata")
strdir("specdata"))
str(dir("specdata"))
x=c()
str(x)
vec <- numeric(0)
vec
vec <- c(vec, 1:5)
vec
vec <- c(vec, 3:6)
vec
vec <- c(vec, 100)
vec
?cor
str(cor)
source("corr.R")
corr("specdata",150)
source("corr.R")
corr("specdata",150)
cr <-corr("specdata" ,150)
head(cr)
summary(cr)
cr <-corr("specdata" ,400)
head(cr)
summary(cr)
cr <-corr("specdata" ,5000)
summary(cr)
length(cr)
cr <-corr("specdata" )
summary(cr)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/corr-test.R")
corr.testscript()
