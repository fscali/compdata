dimnames(m)<-list("row","col")
m
m[1,]
m[2,]
m[,1]
m[,2]
m[,3]
m[,4]
x<-list(a=list(10,12,14), b=c(3.14,2.81))
x
class(x)
names(x)
x$a
x$b
x
x[[c(1,3)]]
x[[c(2,1)]]
x[[c(2,2)]]
x<-c(1,2,NA,NA,3)
x
is.na(x)
bad<-is.na(x)
x[!bad]
x
y<-c("a",NA,NA,"d",2)
y
x
complete.cases(x,y)
x[good]
help(seq_along)
args(lm)
args/sum
args(sum)
f<-function(a,b){}
f<-function(a,b){
a^2
}
f(2)
f<-function(a,b){
print(a)
print(b)
f(54)
}
f<-function(a,b){
print(a)
print(b)
}
f(54)
search()
library(survival)
search()
f
environment(f)
parent.env(environment(f))
make.power<-function(n){
pow<-function(x){
x^n
}
pow
}
cube<-make.power(3)
square<-make.power(2)
cube(3)
square(3)
ls(environment("cube"))
ls(environment(cube))
get("n",environment(cuve))
get("n",environment(cube))
get("n",environment(square))
y<-10
f<-function(x){}
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){}
g<-function(x){
x * y
}
f(3)
make.NegLogLik <- function(data, fixed=c(FALSE,FALSE)){
params <- fixed
function(p){
params[!fixed] <- p
mu<-params[1]
sigma<-params[2]
a<- -0.5 * length(data) * log(2*pi*sigma^2)
b<- -0.5 * sum((data-mu)^2) / (sigma^2)
-(a+b)
}
}
set.seed(1)
normals=rnorm(100,1,1)
normals=rnorm(100,1,2)
nLL <- make.NegLogLik(normals)
nLL
ls(environment(nLL))
optim(c(mu=0, sigma=1), nLL)$par
x<-list(a=1:4, b=rnorm(10) c=rnorm(20,1), d=rnorm(100,5))
x<-list(a=1:4, b=rnorm(10), c=rnorm(20,1), d=rnorm(100,5))
lapply(x,mean)
lapply(x,sum)
runif(100)
runif(100,max=100)
x<-list(rnorm(100), runif(100), rpois(100,1))
x
x[0]
x[1]
x[2]
x[3]
x[1]
length(x[1])
length(x[2])
length(x[3])
x[1]
str(x[1])
str(x[2])
str(x[3])
help(quantile)
r<-norm(10)
r<-rnorm(10)
r
x<-rnorm(10)
print(x)
summary(x)
x<-rnorm(100)
summary(x)
x<-rnorm(10,20,2)
x
mean(x)
summary(x)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5 + 2*x + e
summary(y)
plot(x,y)
x=1:00
x=1:100
e<-rnorm(100,0,1)
y<- 1.5 -3*x +e
plot(x,y)
e
?rbinom
sample(letters,5)
sample(1:10)
sample(1:10)
sample(1:10, replace=TRUE)
dev.off()
x<-rnorm(100)
hist(x)
help(dev.set)
dev.set(dev.next())
hist(x)
dev.set(dev.next())
dev.set(4
)
hist(x)
x<-rnorm(100)
y<-x+rnorm(100)
par(las=1)
plot(x,t)
plot(x,y)
par(las=2)
plot(x,y)
par(las=1)
plot(x,y)
par(las=2)
plot(x,y)
par(las=2)
par(las=1)
plot(x,y)
par("lty")
par("lwd")
par("pch")
par("col")
par("bg")
par("mar")
par("oma")
par("mfrow")
par("mfcol")
x<-rnorm(100)
y<-x+rnorm(100)
plot(x,y)
x1<-rnorm(10)
y1<-rnorm(10)
points(x1,y1,col="red")
?Devices
dev.list
dev.list()
quit()
x<-rnorm(100)
hist(x)
y<-rnorm(100)
plot(x,y)
par(mar=c(2,2,2,2))
plot(x,y)
par(mar=c(4,4,2,2))
plot(x,y, pch=20)
plot(x,y, pch=30)
plot(x,y, pch=10)
plot(x,y, pch=5)
plot(x,y, pch=18)
example(points)
x<-rnorm(100)
y<-rnorm(100)
plot(x,y,pch)
plot(x,y,pch=20)
title("Scatterplot")
text(-2,-2, "Label")
legend("topleft", legend="Data", pch=20)
legend("topleft", legend="Data", pch=19)
fit <-lm(y-x)
fit <-lm(y - x )
y
x
fit <- lm(y - x )
x<-rnorm(100)
y<-rnorm(100)
plot(x,y,pch=20)
fit <- lm(y-x)
fit <- lm(y Ëœ x)
fit <- lm(y ~ x)
abline(fit)
abline(fit, lwd=3)
abline(fit, lwd=3, col="blue")
plot(x, y, xlab="Weight", ylab="Height", main="Scatterplot", pch=20)
fit <-lm(y-x)
fit <-lm(y ~ x)
abline(fit, lwd=3, col="red")
z <- rpois(100,2)
par(mfrow=c(2,1))
plot(x,y,pch=20)
plot(x,y,pch=19)
par("mar")
par(mar=c(2,2,1,1)
)
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mfrow=c(1,2))
par(mar=c(4,4,2,2)
plot(x,y,pch=20)
par(mar=c(4,4,2,2))
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mfrow=c(1,1))
x<-rnorm(100)
y<-x+rnorm(100)
g<-gl(2,50, labels=c("Male", Female))
g<-gl(2,50, labels=c("Male", "Female"))
str(g)
g
g[4]
g[40]
g[70]
plot(x,y,type="n")
#add one group at a time
points(x[g=="Male"], y[g==Male], col = "green")
points(x[g=="Male"], y[g=="Male"], col = "green")
points(x[g=="Female"], y[g=="Female"], col = "blue")
points(x[g=="Female"], y[g=="Female"], col = "blue", pch=19)
save.image("~/Documents/week3/workspace_demp.RData")
load("~/Documents/week3/workspace_demp.RData")
#lattice plot
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data=orthodont)
xyplot(distance ~ age | Subject, data=Orthodont)
xyplot(distance ~ age | Subject, data=Orthodont, type=b)
xyplot(distance ~ age | Subject, data=Orthodont, type="b")
x<-rnorm(100)
y<-x+rnorm(100,sd=0.5)
f<-fl(2,50,labels=c("Group 1", "Group 2"))
f<-gl(2,50,labels=c("Group 1", "Group 2"))
xyplot(y~x|f)
f<-fl(3,50,labels=c("Group 1", "Group 2", "Group3"))
f<-gl(3,50,labels=c("Group 1", "Group 2", "Group3"))
xyplot(y~x|f)
xyplot(y~x|f)
f<-fl(3,33,labels=c("Group 1", "Group 2", "Group3"))
f<-gl(3,33,labels=c("Group 1", "Group 2", "Group3"))
xyplot(y~x|f)
x=seq(from=-5, to=5,length=10)
x
x=seq(from=-5, to=5,length=11)
x
x=seq(from=-5, to=5,length=12)
x
x=seq(from=-5, to=5,length=11)
normalDensity<-dnorm(x,mean=0,sd=1)
plot(x, normalDensity)
x=seq(from=-5, to=5,length=100)
normalDensity<-dnorm(x,mean=0,sd=1)
plot(x, normalDensity)
normalDensity<-dnorm(x,mean=1,sd=2)
plot(x, normalDensity)
plot(x, normalDensity,pch=20)
plot(x, normalDensity,pch=19)
plot(x, normalDensity,pch=18)
plot(x, normalDensity,pch=17)
plot(x, normalDensity,pch=16)
x = seq(0,10, by=1)
binomialDensity=dbinom(x,size=10, prob=0.5)
plot(x,binomialDensity)
x
binomialDensity
args(sample)
heights = rnorm(10,mean=188,sd=3)
sample(heights,size=10, replace=TRUE)
sample(heights,size=10, replace=FALSE)
sample(heights,size=10, replace=TRUE)
?rpois
?dpois
x<-seq(0,100, by=1)
x
args(seq)
args(seq())
?seq
?dpois
d <- dpois(x, 4)
plot(x,d)
d <- dpois(x, 10)
plot(x,d)
d <- dpois(x, 20)
plot(x,d)
?dpoist
?dpois
?rpois
plot(x,d)
d <- dpois(x, 100)
plot(x,d)
plot(x,d)
d <- dpois(x, 1)
plot(x,d)
d <- dpois(x, 3)
plot(x,d)
plot(x,50)
d <- dpois(x, 50)
plot(x,50)
plot(x,d)
plot(x,5)
d <- dpois(x, 5)
plot(x,d)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset <- data.frame[dataFrame$heightsCM > 188]
dataFrameSubset <- data.frame[dataFrame$heightsCM > 188,]
dataFrameSubset <- dataframe[dataFrame$heightsCM > 188,]
dataFrameSubset <- dataFrame[dataFrame$heightsCM > 188,]
mean(dataFrameSubset$weightsK)
set.seed(41)
?rcauchy
?sample
?rcauchy(100)
rcauchy(100)
set.seed(41)
rcauchy(100)
set.seed(41)
cauchyValues <- rcauchy(100)
set.seed(415)
?sample
set.seed(415)
sample(cauchyValues, 10, replace=TRUE)
set.seed(41)
cauchyValues <- rcauchy(100)
set.seed(415)
sample(cauchyValues, 10, replace=TRUE)
?unclass
x<-Sys.time()
p<-as.POSIXlt(x)
p
unclass(p)
pal <- colorRampPalete(c("red","yellow", "blue"))
pal <- colorRampPalette(c("red","yellow", "blue"))
pal
pal(100)
x<-rnorm(100)
plot(x,col=pal(100))
plot(x,col=pal(10))
hist(x)
hist(x, col=pal(100))
plot(x,col=pal(100))
pal<-colorRamp(c("red", "blue"))
pal
pal()
pal(10)
pal(1)
pal(3)
pal(.5)
seq(0,1,len=10)
pal(seq(0,1,len=10))
?Classes
class(NA)
class("foo")
class("1)
c
""
)
""
x<-rnorm(100)
y<-x+rnorm(100)
fit <- lm(y~x)
class(lm)
class(fit)
summary(lm)
summary(lfit)
summary(fit)
mean
print
methods("mean")
methods("print")
methods("median")
show
print
showMethods("show")
getS3method("mean","numeric")
getS3method("mean","default")
class(getS3method("mean","default"))
head(getS3method("mean","default"))
tail(getS3method("mean","default"))
head(getS3method("plor","default"))
head(getS3method("plot","default"))
head(getS3method("plot","ts"))
setclass("polygon", representation(x="numeric", y="numeric"))
setClass("polygon", representation(x="numeric", y="numeric"))
polygon@x
showmethods("plot")
showMethods("plot")
?rgb
args(rgb)
?colors
colors()
?topo.colors
colorRamp
args(colorRamp)
?colorRamp
args(colorRamp)
rgb()
args(rgb)
rgb(1,1,1)
rgb(0,0,0)
rgb(0.5,0,0)
?rgb
?grep
v<-c("francesco", "scali", "gabriella", "voltolini")
grep("f", v)
grep("a", v)
grep("b", v)
grep("l", v)
regexec("^s(.*?)r", "she likes rum raisin after running hard")
?setOldClass
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", "night night at 8")
grep("^([a-z]+) +\1 +[a-z]+", "night night at 8")
grep("^([a-z]+) +\\1 +[a-z]+ [0-9]", "night night at 8")
setwd("~/Documents/dev/Coursera/R/week4/pa4")
homicides <- readLines("homicides.txt")
homicides[1]
a=NULL
a
if(a==NULL){
print("error")
}
if(is.null(a)){
print("error")
}
c(T,F)
sum(c(T,F))
sum(c(T,F,T))
?grepl
homicides
source("count.R")
count("a")
count("other")
count("unknown")
count("asphyx")
count("asphyxiation")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit()
submit()
homicides[1]
homicides[2]
homicides[5]
homicides[8]
source("agecount.R")
agecount(3)
agecount(21)
?paste
source("agecount.R")
source("agecount.R")
agecount(21)
agecount(3)
source("agecount.R")
agecount(21)
agecount(3)
homicides[1]
homicides[2]
homicides[3]
homicides[4]
homicides[5]
homicides[6]
source("agecount.R")
agecount(3)
agecount(21)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
source("agecount.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
